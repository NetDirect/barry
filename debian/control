#
# Ideally, the evolution source path autodetection routines would
# load libebook and libecal dynamically, so that dependencies would
# not force the inclusion of evolution-data-server and friends.
#
# But there are two problems with that, which need to be
# cracked first:
#
#     - the glib major version numbers, according to the .so
#       files, are not consistent between distros
#     - when used dynamically, in a program that is not otherwise
#       linked to glib, it can segfault... and it seems to get
#       funky somewhere inside glib itself... so I'm guessing that
#       the library is not being initialized properly :-(
#
# All this means that general compilations of barrydesktop will
# need evolution-data-server and friends linked in.  It is possible
# to compile without by supplying --without-evolution on the configure
# command line, but then you risk getting a weak auto-detection
# of data sources in newer versions of evolution.  If your data
# sources are located in paths like this:
#
#      file:///home/cdfrey/.evolution/addressbook/local/system
#
# then it is safe to disable evolution for the barrydesktop compile.
#
# Otherwise, if your version of evolution is new, and uses funkier names,
# or uses local:system, or puts its files under ~/.config, then
# build --with-evolution and link against it.
#
Source: barry
Section: misc
Priority: optional
Maintainer: Chris Frey <cdfrey@foursquare.net>
Build-Depends: debhelper (>= 7.0.0), g++ (>= 4.1), cdbs, autoconf, autoconf-archive, automake, libtool, pkg-config, libusb-dev, libboost-serialization-dev, libxml++2.6-dev, libfuse-dev (>= 2.5), zlib1g-dev, libtar-dev, libglibmm-2.4-dev, libgtkmm-2.4-dev, libglademm-2.4-dev, gettext (<< 0.18) | autopoint, libgcal-dev, wx-common, libwxgtk2.8-dev, libsdl-dev, evolution-data-server-dev, libebook1.2-dev, libedata-book1.2-dev, libedata-cal1.2-dev, libedataserver1.2-dev
Standards-Version: 3.9.3
Homepage: http://netdirect.ca/barry
Vcs-Git: git://repo.or.cz/barry.git
Vcs-Browser: http://repo.or.cz/w/barry.git

Package: libbarry18
Section: libs
Architecture: any
Depends: ${shlibs:Depends}
Description: Library for using the BlackBerry handheld on Linux
 Barry is a GPL C++ library for interfacing with the RIM BlackBerry Handheld.
 .
 This package contains shared libraries.

Package: libbarry18-dbg
Section: debug
Priority: extra
Architecture: any
Depends: libbarry18 (= ${binary:Version})
Description: Library for using the BlackBerry handheld (debug symbols)
 Barry is a GPL C++ library for interfacing with the RIM BlackBerry Handheld.
 .
 This package contains the debug version of the shared library.

Package: libbarry-dev
Section: libdevel
Architecture: any
Depends: libbarry18 (= ${binary:Version})
Description: Development files for libbarry
 Barry is a GPL C++ library for interfacing with the RIM BlackBerry Handheld.
 .
 This package contains the header files required for building applications
 based on libbarry.

Package: barry-util
Section: utils
Architecture: any
Depends: libbarry18, udev [linux-any], python, ${shlibs:Depends}
Suggests: ppp
Description: Command line utilities for working with the RIM BlackBerry Handheld
 Barry is a GPL C++ library for interfacing with the RIM BlackBerry Handheld.
 .
 This package contains command line utilities, such as bcharge, btool,
 breset, bio, etc.

Package: barry-util-dbg
Section: debug
Priority: extra
Architecture: any
Depends: barry-util (= ${binary:Version})
Description: Command line BlackBerry utilities (debug symbols)
 Barry is a GPL C++ library for interfacing with the RIM BlackBerry Handheld.
 .
 This package contains the debug versions of the command line utilities.

Package: barrybackup-gui
Section: utils
Architecture: any
Depends: libbarry18, ${shlibs:Depends}
Description: GTK+ GUI for backing up the RIM BlackBerry Handheld
 Barry is a GPL C++ library for interfacing with the RIM BlackBerry Handheld.
 .
 This package contains a GUI application for making backups and restores.

Package: barrybackup-gui-dbg
Section: debug
Priority: extra
Architecture: any
Depends: barrybackup-gui (= ${binary:Version})
Description: GTK+ GUI for backing up BlackBerry (debug symbols)
 Barry is a GPL C++ library for interfacing with the RIM BlackBerry Handheld.
 .
 This package contains the debug version of the backup GUI.

Package: barrydesktop
Section: utils
Architecture: any
Depends: libbarry18, ${shlibs:Depends}
Description: Desktop Panel GUI for the RIM BlackBerry Handheld
 Barry is a GPL C++ library for interfacing with the RIM BlackBerry Handheld.
 .
 This package contains a GUI management application for backups, syncing, etc.

Package: barrydesktop-dbg
Section: debug
Priority: extra
Architecture: any
Depends: barrydesktop (= ${binary:Version})
Description: Desktop Panel GUI for the RIM BlackBerry Handheld (debug symbols)
 Barry is a GPL C++ library for interfacing with the RIM BlackBerry Handheld.
 .
 This package contains the debug files for the Barry desktop.

#Package: barry-doc
#Architecture: all
#Description: Documentation for barry
# Barry is a GPL C++ library for interfacing with the RIM BlackBerry Handheld.
# It comes with a command line tool for exploring the device and for making quick
# backups. The goal of this project is to create a fully functional syncing
# mechanism on Linux.

