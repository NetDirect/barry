diff -Naur barry-0.12/tools/btool.cc barry-0.12-new/tools/btool.cc
--- barry-0.12/tools/btool.cc	2008-03-06 23:27:05.000000000 +0000
+++ barry-0.12-new/tools/btool.cc	2008-06-29 02:05:13.000000000 +0000
@@ -92,6 +92,7 @@
    << "   -D #      Record index number as seen in the -T state table,\n"
    << "             which indicates the record to delete.  Used with the -d\n"
    << "             command to specify the database.\n"
+   << "   -n        Use null parser on all databases.\n"
    << endl;
 }
 
@@ -215,10 +216,14 @@
 	}
 };
 
-auto_ptr<Parser> GetParser(const string &name, const string &filename)
+auto_ptr<Parser> GetParser(const string &name, const string &filename, const bool &null_parser)
 {
+	if( null_parser ) {
+		// use null parser
+		return auto_ptr<Parser>( new DataDumpParser );
+	}
 	// check for recognized database names
-	if( name == Contact::GetDBName() ) {
+	else if( name == Contact::GetDBName() ) {
 		return auto_ptr<Parser>(
 			new RecordParser<Contact, Store<Contact> > (
 				new Store<Contact>(filename, false)));
@@ -419,7 +424,8 @@
 			list_contact_fields = false,
 			list_ldif_map = false,
 			epp_override = false,
-			record_state = false;
+			record_state = false,
+			null_parser = false;
 		string ldifBaseDN, ldifDnAttr;
 		string filename;
 		string password;
@@ -431,7 +437,7 @@
 
 		// process command line options
 		for(;;) {
-			int cmd = getopt(argc, argv, "B:c:C:d:D:e:f:hlLm:MN:p:P:r:R:Ss:tT:vX");
+			int cmd = getopt(argc, argv, "B:c:C:d:D:e:f:hlLm:MN:p:P:r:R:Ss:tT:vXn");
 			if( cmd == -1 )
 				break;
 
@@ -539,6 +545,10 @@
 				reset_device = true;
 				break;
 
+			case 'n':	// use null parser
+				null_parser = true;
+				break;
+
 			case 'h':	// help
 			default:
 				Usage();
@@ -701,7 +711,7 @@
 
 			con.OpenMode(Controller::Desktop, password.c_str());
 			unsigned int id = con.GetDBID(dbNames[0]);
-			auto_ptr<Parser> parse = GetParser(dbNames[0],filename);
+			auto_ptr<Parser> parse = GetParser(dbNames[0],filename, null_parser);
 
 			for( unsigned int i = 0; i < stCommands.size(); i++ ) {
 				con.GetRecord(id, stCommands[i].index, *parse.get());
@@ -727,7 +737,7 @@
 
 			for( ; b != dbNames.end(); b++ ) {
 				con.OpenMode(Controller::Desktop, password.c_str());
-				auto_ptr<Parser> parse = GetParser(*b,filename);
+				auto_ptr<Parser> parse = GetParser(*b,filename, null_parser);
 				unsigned int id = con.GetDBID(*b);
 				con.LoadDatabase(id, *parse.get());
 			}
