Release: version 0.0.1 - 2005/??/??
------------------------------------------------------------------------------
2005/11/19
	- added parser.{h,cc} virtual wrapper to generalize LoadDatabase()
	- added code to socket.cc's Packet() command to re-receive on
		reception of empty packets... this seems to be a signal
		from the device that it needs more time for long transfers
		Current limit: 10 blank packets before exception is thrown
		Observed maximum blank count: 1
	- added MessageRecord and OldMessageRecord to protocol.h
	- changed common record field structs to one CommonField struct
	- increased default USB timeout to 10 seconds (some loaded devices
		seem to need more time...)
	- reorganized record.{h,cc} to try to reduce the code duplication
	- record.h classes now "know" the sizes of their corresponding
		protocol structs... this may cause trouble down the line
		with Python, if used(?)
	- added Message class for Email records
	- removed the "Get*" database functions and replaced with
		general LoadDatabase() call, which loads any database
		available, and parses it with a Parser object
	- added GetDBID() for searching for database numbers via name
	- added test code to retrieve and display all email
	- cleaned up comments
	- renamed blackberry.{h,cc} to controller.{h,cc}
	- renamed bbtool.cc to btool.cc
	- added Makefile.conf
	- added copyright notices to source files
	- added COPYING file with GPL
	- put parser in Barry namespace, and added auto_ptr-like mode for
		store object pointers
	- added doxygen docs
	- added header comments to convo.awk script
	- removed Test() function in Controller object, and made class
		better suited to its general API purpose
	- changed OpenMode() so it loads command table and DBDB... it is now
		a public API function
	- moved Controller test code to btool.cc and made tool more
		generically useful... can now download any DB by name on
		the command line
	- added mode checks to Controller
	- added -t and -d command line options to btool
	- added base64 routines from John Walker / Fourmilab and Citadel/UX
	- converted base64 routines into an API, instead of hardcoded
		file based
2005/11/18
	- changed project name to Barry, including namespaces
	- renamed sbcommon.* to common.*
	- increased USB default timeout to 2 seconds
	- fixed formatting bug in Data operator<< output
	- cleaned up the protocol packet structs, getting rid of the
		confusing param/simple split... param is now the tableCmd
		from the Command Table
	- moved protocol structs from record.h to protocol.h
	- added support for older version of the USB protocol, which matches
		the Cassis spec more closely
	- fixed the hardcoded offsets in blackberry.cc's protocol parsing
	- fixed Socket::Close() so on error, socket flags are reset.
		This stops Close() from being called twice on exception
		destructors
2005/11/17
	- added Doxyfile to the project
	- tuned Makefile
	- added mode selection support to Blackberry class (RIM Desktop,
		RIM Bypass, and RIM_JavaLoader)
		Mode selection governs which socket is used in subsequent
		data transfers.
	- added Command Table parsing and protocol support
		Blackberry class, and CommandTable record class
	- added Database database parsing and protocol support
		Blackberry class and DatabaseDatabase record class
	- added Address book retrieval support - dumps data to stdout for now
	- fixed bug in CopyOnWrite mode in Data class, where could allocate
		less buffer than data copied
	- added "easy exception" debug output macro
	- fixed minor spelling error in protocol.cc
	- fixed ModeSelectCommand protocol structure - it is not a parameter
		command, but uses the unknown slots for socket and flag
		data
	- removed hardcoded socket numbers from protocol.h
	- fixed bug in socket.cc:Open() where packet size was not properly
		saved
	- implemented socket::Close()
	- fixed sequence number checks, so it is reset properly on socket 0
	- added Socket::NextRecord() for multiple record data transfers
	- fixed input handling bug in translate.cc
2005/11/11
	- added .cvsignore files to project
	- added README notes to document the source architecture
	- added dbsetup data script, which shows how to get into database
		mode, using the RIM Desktop mode, and open a socket
	- added blackberry.{h,cc} class
	- added command line parameters to bbtool.cc
		-l = list only
		-p = specify pin of blackberry device
	- added blackberry test code in bbtool.cc - debugging the initial
		opening protocol: sockets, modes, etc... see dbsetup for
		results
	- added copy-on-write functionality to Data class, so it can be used
		with plain data buffers with little performance impact
	- added eout() and ddout() debugging - to separate:
		- regular debug output
		- exception debug output (should probably be logged to
			syslog someday, and never turned off)
		- raw data dump output
	- changed errno SBError exception handler to try to decode the error
		numbers into english (limited success)
	- fixed probe and socket USB Bulk message handling, so they don't
		use PollCompletions(), but use IO::Wait() (libusb_io_wait())
	- added common packet size checker in protocol.cc
	- fixed unpacked protocol packet structs... using gcc's
		__attribute__ ((packed)) ... see protocol.h
	- added ModeSelectCommand structure (protocol.h)
	- finished Socket::Open() call  (Close() not yet implemented)
	- moved Socket::Send/Receive() out of private, as they can be used
		for socket 0 operations.
	- cleaned up pointer management with macros:
		MAKE_PACKET()
		COMMAND()
		IS_COMMAND()
	- added IO::Wait() and IO::Cancel() to correspond with libusb API
	- added datadumping in usbwrap for easy protocol capture
	- added preliminary record.{h,cc} classes
	- added Contact record parsing, and test code
2005/10/20
	- syncberry tree started

